name: CI

permissions:
  checks: write
  pull-requests: write

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"
  workflow_dispatch:
    
jobs:
  lint:
    strategy:
      fail-fast: true
      matrix:
        python-version: ['3.13']
        os: [ubuntu-latest]
    runs-on: ${{matrix.os}}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{matrix.python-version}}
      - name: Install Project
        run: pip install '.[test]'
      - name: Run code style check
        run: pflake8
      - name: Run code import order check
        run: isort --profile black --check-only --diff .
      - name: Run code formatting check
        run: black --check --diff .
      - uses: actions/checkout@master
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Run PEP8
        uses: quentinguidee/pep8-action@v1
        with:
          arguments: '--max-line-length=120'
  tests:
    needs: lint
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.13']
        os: [ubuntu-latest]
    runs-on: ${{matrix.os}}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{matrix.python-version}}
      - name: Install Project
        run: pip install '.[test]'
      - name: Run Tests
        run: pytest -v --junitxml=test-result.xml
      - name: Publish Test Results in JUnit XML format
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: test-result.xml
          check_name: Test Results (Python ${{matrix.python-version}})
