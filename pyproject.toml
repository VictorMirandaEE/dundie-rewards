# This file is used to configure the build system and the project itself.
# It is used by the build system to determine how to build the project and by the project to determine its metadata.
# For more information, see:
# https://packaging.python.org/en/latest/guides/writing-pyproject-toml/
# https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html
# https://mypy.readthedocs.io/en/stable/config_file.html
# https://black.readthedocs.io/en/stable/guides/using_black_with_other_tools.html
# https://pycqa.github.io/isort/docs/configuration/config_files.html

# Build system specifications
[build-system]
requires = ["setuptools", "setuptools-scm"]
build-backend = "setuptools.build_meta"

# Project (metadata, build, install) specifications
[project]
name = "dundie"
dynamic = ["version", "readme"]
requires-python = ">=3.10"
authors = [
    {name = "Victor Miranda", email = "victor@dundermifflin.com"}
]
maintainers = [
    {name = "Victor Miranda", email = "victor@dundermifflin.com"}
]
description = "This is a CLI tool for managing the Dunder Mifflin rewards program."
license = "Unlicense"
license-files = ["LICENSE"]
keywords = ["dundie", "cli", "rewards", "dunder mifflin"]
classifiers = [
    "Topic :: Utilities",
    "Development Status :: 5 - Production/Stable",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Operating System :: OS Independent",
    "Environment :: Console",
    "Intended Audience :: End Users/Desktop",
]
dependencies = [
    "aiosmtpd>=1.4.6",
    "alembic>=1.16.1",
    "click>=8.2.1",
    "httpx>=0.28.1",
    "pwdlib[argon2]>=0.2.1",
    "pydantic[email]>=2.11.5",
    "rich>=14.0.0",
    "rich-click>=1.8.9",
    "sqlmodel>=0.0.24",
]

[project.urls]
Homepage = "https://dundermifflin.com"
Repository = "https://github.com/VictorMirandaEE/dundie-rewards"

[project.scripts]
dundie = "dundie.__main__:main"

[project.gui-scripts]

[project.optional-dependencies]
test = [
    "coverage>=7.8.2",
    "pep8-naming>=0.15.1",
    "pytest>=8.4.0",
    "pytest-cov>=6.1.1",
    "pytest-forked>=1.6.0",
    "setuptools>=80.9.0",
    "setuptools-scm>=8.3.1",
]

[tool.setuptools]
packages = ["dundie"]

[tool.setuptools.dynamic]
readme = {file = "README.md"}

[tool.setuptools_scm]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q -vv"
testpaths = ["tests", "integration"]
markers = [
    "unit: Mark for unit tests",
    "integration: Mark for integration tests",
    "high: High priority",
    "medium: Medium priority",
    "low: Low priority",
]

[dependency-groups]
dev = [
    "ipdb>=0.13.13",
    "pep8-naming>=0.15.1",
    "pudb>=2025.1",
    "pytest-watch>=4.2.0",
    "setuptools>=80.9.0",
    "setuptools-scm>=8.3.1",
    "taskipy>=1.14.1",
    "types-setuptools>=80.9.0.20250529",
]

[tool.ruff]
line-length = 80
indent-width = 4
target-version = "py310"

[tool.taskipy.tasks]
lint = {help="Run static code analysis using Ruff", cmd="uvx ruff check dundie integration tests"}
format = {help="Format code using Ruff", cmd="uvx ruff format dundie integration tests"}
test = {help="Run tests with pytest and coverage", cmd="""
    uv run --extra test pytest -s  --forked --cov=dundie --cov-branch
    uv run --extra test coverage xml
    uv run --extra test coverage html
    """}
docs = {help="Build the documentation", cmd="uvx mkdocs build --clean"}
docs-serve = {help="Serve the documentation locally", cmd="uvx mkdocs serve"}
clean = {help= "Clean up the project directory", cmd="""
    find ./ -name '*.pyc' -exec rm -f {} \\;
    find ./ -depth -name '__pycache__' -exec rm -rf {} \\;
    find ./ -name 'Thumbs.db' -exec rm -f {} \\;
    find ./ -name '*~' -exec rm -f {} \\;
    rm -rf {.cache,.pytest_cache,.mypy_cache,htmlcov,docs/_build}
    """}
resetdb = {help="Reset the project database", cmd="""
    read -p "Are you sure you want to reset the project db? [y/N] " -n 1 -r
    echo    # (optional) move to a new line
    if [[ $REPLY =~ ^[Yy]$ ]]
    then
        rm -rf assets/database.db
        uv run python -m aiosmtpd -n &
        uv run dundie load assets/employees.csv
        uv run alembic stamp head
        pkill -f aiosmtpd
    fi
    """}
